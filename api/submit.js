import { google } from 'googleapis';
import fetch from 'node-fetch';

export default async (req, res) => {
  if (req.method !== 'POST') return res.status(405).send('Method Not Allowed');

  const data = req.body;

  const credentials = JSON.parse(process.env.GOOGLE_SERVICE_ACCOUNT);
  const sheets = google.sheets({ version: 'v4', auth: new google.auth.JWT(
    credentials.client_email, null, credentials.private_key, ['https://www.googleapis.com/auth/spreadsheets']
  )});

  const sheetId = process.env.SHEET_ID;
  const range = '‡∏ü‡∏≠‡∏£‡πå‡∏°!A2:Z';

  await sheets.spreadsheets.values.append({
    spreadsheetId: sheetId,
    range,
    valueInputOption: 'USER_ENTERED',
    requestBody: { values: [[
      new Date().toLocaleString(),
      data.date,
      data.name,
      data.car_no,
      data.phone,
      data.barcode,
      data.route,
      data.standby_round,
      data.standby_time,
      data.departure_time,
      data.note,
      data.trip_fee,
      data.oil_claim,
      data.bank,
      data.bank_name,
      data.bank_no
    ]] }
  });

  const token = process.env.LINE_TOKEN;
  const groupId = process.env.LINE_GROUP_ID;

  const message = `
üöõ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ö‡∏¥‡∏Å‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô üöõ
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${data.date}
‡∏ä‡∏∑‡πà‡∏≠üôã: ${data.name}
‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñüöõ: ${data.car_no}
‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${data.phone}
‡πÄ‡∏•‡∏Ç‡∏ö‡∏≤‡∏£‡πå: ${data.barcode}
‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: ${data.route}
‡∏£‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πÅ‡∏ï‡∏ô‡∏ö‡∏≤‡∏¢: ${data.standby_round}
‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πÅ‡∏ï‡∏ô‡∏ö‡∏≤‡∏¢: ${data.standby_time}
‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á: ${data.departure_time}
‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ${data.note}
üí∏ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß: ${data.trip_fee} ‡∏ö‡∏≤‡∏ó
üí∏ ‡πÄ‡∏ö‡∏¥‡∏Å‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô: ${data.oil_claim} ‡∏ö‡∏≤‡∏ó
üè¶ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${data.bank}
üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${data.bank_name}
üî¢ ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${data.bank_no}
`;

  await fetch('https://api.line.me/v2/bot/message/push', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ to: groupId, messages: [{ type: 'text', text: message }] })
  });

  res.status(200).send('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
};
